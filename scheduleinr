package demo3;

import org.rosuda.REngine.REXPMismatchException;
import org.rosuda.REngine.Rserve.RConnection;
import org.rosuda.REngine.Rserve.RserveException;

public class GetDatabaseJob implements InterruptableJob
{
    public void execute(JobExecutionContext arg0) throws JobExecutionException
    {
      invokeR();
    }
    public void invokeR() throws REXPMismatchException, RserveException 
    {
        RConnection connection = null;
        try 
        {
            connection = new RConnection();
            connection.eval("source('D:/My Stuff/Application Calling/ModelPrediction.R')");
            connection.eval("predictFualBand('D:/My Stuff/coursera/Practical Machine learning/pml-testing.csv')");
            System.out.println("Printed Successfully !!");
        }
        catch (RserveException e) 
        {
            e.printStackTrace();
        }
    }
}
public class av
{
    public static void main(String[] args)
    {
        JobDetails job = JobBuilder.newJob(GetDatabaseJob.class);

        // Schedule to run at 5 AM every day
        ScheduleBuilder scheduleBuilder = 
                CronScheduleBuilder.cronSchedule("0 0 5 * * ?");
        Trigger trigger = TriggerBuilder.newTrigger().
                withSchedule(scheduleBuilder).build();

        Scheduler scheduler = StdSchedulerFactory.getDefaultScheduler();
        scheduler.scheduleJob(job, trigger);

        scheduler.start();
    }
}
 



